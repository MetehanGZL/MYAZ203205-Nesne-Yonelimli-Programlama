// <auto-generated />
using System;
using Demo2.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace demo2.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Demo2.Models.Meeting", b =>
                {
                    b.Property<int>("MeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MeetingId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            MeetingId = 1,
                            Date = new DateTime(2024, 1, 11, 15, 7, 28, 74, DateTimeKind.Local).AddTicks(4485),
                            Link = "#",
                            Subject = "Finaller"
                        });
                });

            modelBuilder.Entity("Demo2.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            PersonId = 2,
                            FirstName = "Jane",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("Demo2.Models.PersonInMeeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeetingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonInMeeting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MeetingId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            MeetingId = 1,
                            PersonId = 2
                        });
                });

            modelBuilder.Entity("Demo2.Models.PersonInMeeting", b =>
                {
                    b.HasOne("Demo2.Models.Meeting", "Meeting")
                        .WithMany("PersonInMeeting")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo2.Models.Person", "Person")
                        .WithMany("PersonInMeeting")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Demo2.Models.Meeting", b =>
                {
                    b.Navigation("PersonInMeeting");
                });

            modelBuilder.Entity("Demo2.Models.Person", b =>
                {
                    b.Navigation("PersonInMeeting");
                });
#pragma warning restore 612, 618
        }
    }
}
